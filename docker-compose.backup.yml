services:
  # Database
  postgres:
    image: postgres:15
    container_name: fishing-chat-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: fishing_chat
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    container_name: fishing-chat-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  chat-api:
    image: 859727769026.dkr.ecr.ap-northeast-2.amazonaws.com/fishing-booking-chat-api:latest
    container_name: fishing-chat-api
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/fishing_chat
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password123
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_PROFILES_ACTIVE: docker

      # - SPRING_RABBITMQ_HOST=b-12345678-1234-1234-1234-123456789012.mq.ap-northeast-2.amazonaws.com
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: admin
      SPRING_RABBITMQ_PASSWORD: password123
      SPRING_RABBITMQ_SSL_ENABLED: false
      SPRING_RABBITMQ_VIRTUAL_HOST: /
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - chat-network
    restart: unless-stopped

  # Frontend Web
  web:
    image: 859727769026.dkr.ecr.ap-northeast-2.amazonaws.com/fishing-booking-web:b73226d89486b1c87283a5f1410cf98b560b3bfb
    container_name: fishing-chat-web
    ports:
      - "80:3000"
    depends_on:
      - chat-api
    networks:
      - chat-network
    restart: unless-stopped

networks:
  chat-network:
    driver: bridge

volumes:
  rabbitmq_data:
  postgres_data:
